OUTDIR = bin
OUTFILE = $(OUTDIR)/DeferredRenderer
CC = g++

CPPFLAGS := -DGLCOREARB_PROTOTYPES
LDFLAGS := -llua

CPPFLAGS += -I/usr/local/include
LDFLAGS += -L/usr/local/lib 

ifeq ($(OS),Windows_NT)
#  export LD_LIBRARY_PATH=win32/bin${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}
	CPPFLAGS += -DWIN32  -std=c++11
  CPPFLAGS += -Iwin32/include
  LDFLAGS += -Lwin32/lib
#  LDFLAGS += -lglew32dll -glfw3dll -lopengl32
  LDFLAGS += -lglew32 -lglfw3 -lopengl32
  LDFLAGS += -lgdi32 -lcomctl32 -luser32 -lole32
  
	ifeq ($(PROCESSOR_ARCHITECTURE),AMD64)
		CCFLAGS += -DAMD64
	endif

	ifeq ($(PROCESSOR_ARCHITECTURE),x86)
		CCFLAGS += -DIA32
	endif
else
	UNAME_S := $(shell uname -s)
  CPPFLAGS += -std=c++11
	LDFLAGS += -ldl -lglfw -lGL -lGLEW

	ifeq ($(UNAME_S),Linux)
		CPPFLAGS += -DLINUX
	endif

	ifeq ($(UNAME_S),Darwin)
		CPPFLAGS += -DOSX
	endif

	UNAME_P := $(shell uname -p)

	ifeq ($(UNAME_P),x86_64)
		CCFLAGS += -DAMD64
	endif

	ifneq ($(filter %86,$(UNAME_P)),)
		CCFLAGS += -DIA32
	endif

	ifneq ($(filter arm%,$(UNAME_P)),)
		CCFLAGS += -DARM
	endif
endif

objs := $(patsubst %.cpp,$(OUTDIR)/%.o,$(wildcard *.cpp))
deps := $(objs:.o=.dep)

.PHONY: all test
all: $(OUTFILE)

-include $(deps)

$(OUTDIR)/%.o: %.cpp
	@mkdir -p $(@D)
	$(CC) $(CPPFLAGS) -c $< -o $@
	@$(CC) $(CPPFLAGS) -MM $< | sed -e '1,1 s|[^:]*:|$@:|' > $(@D)/$*.dep

$(OUTFILE) : $(objs)
	$(CC) $^ $(LDFLAGS) -o $@

test: $(OUTFILE)
	@$(OUTFILE)
#	@$(OUTFILE) data/old/Main4.lua

clean:
	@rm -f $(deps) $(objs) $(OUTFILE)
	@rmdir --ignore-fail-on-non-empty $(OUTDIR)
